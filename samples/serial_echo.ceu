#include "serial.ceu"

native do
    typedef struct {
        nx_uint16_t cnt;
    } Msg ;
end

loop do
    var int err = _Serial_start();
    if err == _SUCCESS then
        err = await SERIAL_STARTDONE;
        if err == _SUCCESS then
            break;
        end
    end
    await 1s;
end

par do
    loop do
        var _message_t** msg_ptr;
        var u8 len;
        (msg_ptr, len) = await SERIAL_RECEIVE;
        var _Msg* msg_recv = _Serial_getPayload(*msg_ptr,0);
        _Leds_set(msg_recv:cnt);
    end

with
    var _message_t pkt_send;
    var _Msg* msg_send = _Serial_getPayload(&pkt_send, sizeof(_Msg));
    msg_send:cnt = 0;

    loop do
        await 2s;
        msg_send:cnt = msg_send:cnt + 1;

        loop do
            _Serial_setDestination(&pkt_send, _AM_BROADCAST_ADDR);
            _Serial_setPayloadLength(&pkt_send, sizeof(_Msg));

            var int err;
            emit SERIAL_SEND => (&pkt_send,&err);
            if err == _SUCCESS then
                break;
            end

            await 1s;
        end
    end
end

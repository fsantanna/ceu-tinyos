/*{-{*/

changequote(<,>)
changequote(`,´)

C constant _FAIL, _EBUSY, _ESIZE, _SUCCESS, _TOS_NODE_ID;

C nohold _DBG();
C _Photo_read();

C nohold _Leds_set();
C nohold _Leds_led0Toggle(), _Leds_led0On(), _Leds_led0Off();
C nohold _Leds_led1Toggle(), _Leds_led1On(), _Leds_led1Off();
C nohold _Leds_led2Toggle(), _Leds_led2On(), _Leds_led2Off();

deterministic _Leds_led0Toggle with _Leds_led1Toggle, _Leds_led1On, _Leds_led1Off,
                                    _Leds_led2Toggle, _Leds_led2On, _Leds_led2Off;
deterministic _Leds_led0On     with _Leds_led1Toggle, _Leds_led1On, _Leds_led1Off,
                                    _Leds_led2Toggle, _Leds_led2On, _Leds_led2Off;
deterministic _Leds_led0Off    with _Leds_led1Toggle, _Leds_led1On, _Leds_led1Off,
                                    _Leds_led2Toggle, _Leds_led2On, _Leds_led2Off;
deterministic _Leds_led1Toggle with _Leds_led2Toggle, _Leds_led2On, _Leds_led2Off;
deterministic _Leds_led1On     with _Leds_led2Toggle, _Leds_led2On, _Leds_led2Off;
deterministic _Leds_led1Off    with _Leds_led2Toggle, _Leds_led2On, _Leds_led2Off;

deterministic _Radio_setDestination with
                _Leds_set, _Leds_led0Toggle;

deterministic RADIO_SEND with
                _Leds_set, _Leds_led0Toggle;

// TODO: many others

C _uint8_t = 1;

// radio & serial
C _nx_int8_t   =  8;
C _nx_uint8_t  =  8;
C _nx_int16_t  = 16;
C _nx_uint16_t = 16;
C _nx_int32_t  = 32;
C _nx_uint32_t = 32;
C _message_t   = 52;     // TODO: assumes CC2420
C _am_addr_t   = 16;

C constant _AM_BROADCAST_ADDR;

@define(TOS_retry, `/*{-{*/
dnl [ 1: timeout ] retry timeout
dnl [ 2: cmd     ] Ceu code
loop do
    var int err_retry = $2;
    if err_retry == _SUCCESS then
        break;
    end
    await $1;
end
/*}-}*/´)

/*}-}*/dnl
